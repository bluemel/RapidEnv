#!/bin/sh
###############################################################################################
# RapidEnv: renv
#
# Copyright (C) 2011 Martin Bluemel
#
# Creation Date: 06/03/2010
#
# This program is free software; you can redistribute it and/or modify it under the terms of the
# GNU Lesser General Public License as published by the Free Software Foundation;
# either version 3 of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Lesser General Public License for more details.
# You should have received a copies of the GNU Lesser General Public License and the
# GNU General Public License along with this program; if not, see <http://www.gnu.org/licenses/>.
###############################################################################################

###############################################
# The RapidEnv command line wrapper
# Unix Shell script(sh, ksh, bash)
###############################################

setupenv () {
  eval "${RAPID_ENV_COMMAND}" boot
  RAPID_ENV_JAVA_RETURN_CODE="$?"
  if [ "${RAPID_ENV_JAVA_RETURN_CODE}" != "0" ]; then
    echo "ERROR ${RAPID_ENV_JAVA_RETURN_CODE} during execution of renv"
    RAPID_ENV_SCRIPT_RETURN_CODE=4
  fi
  if [ $RAPID_ENV_SCRIPT_RETURN_CODE -lt 0 ]; then
    if [ ! -e "${RAPID_ENV_PROFILE}.sh" ]; then
      RAPID_ENV_SCRIPT_RETURN_CODE=0
    fi

    if [ $RAPID_ENV_SCRIPT_RETURN_CODE -lt 0 ]; then

      # source the RapidEnv profile the first time
      . "${RAPID_ENV_PROFILE}.sh"
      WINDOW_TITLE="${RAPID_ENV_PROJECT} ${RAPID_ENV_BRANCH} Shell"
      # xterm -T "${WINDOW_TITLE}" -n "${WINDOW_TITLE}"
      echo -n "\033];${WINDOW_TITLE}\007"

      # initially install the environment
      eval "${RAPID_ENV_COMMAND}" install
      if [ $? != 0 ]; then
        echo "ERROR $? during execution of RapidEnv"
        RAPID_ENV_SCRIPT_RETURN_CODE=5
      fi

      if [ $RAPID_ENV_SCRIPT_RETURN_CODE -lt 0 ]; then

        # source the RapidEnv profile again in case it has changed
        . "${RAPID_ENV_PROFILE}.sh"
      fi
    fi
  fi
}

# initialize RapidEnv envrionment variables

# RAPID_ENV_HOME is the parent folder of where this script is located
ORIGINAL_WD="$(pwd)"
RAPID_ENV_SCRIPT_RETURN_CODE=-1

cd $(dirname "$0")/..
WD="$(pwd)"
if [ -f "${WD}/bin/renv" -a -f "${WD}/lib/rapidenv-1.3.2.jar" ]; then
  SOURCING="false"
  export RAPID_ENV_HOME="${WD}"
else
  SOURCING="true"
  if [ "${RAPID_ENV_HOME}" = "" ]; then
    WD="${ORIGINAL_WD}"
    if [ -f "${WD}/bin/renv" -a -f "${WD}/lib/rapidenv-1.3.2.jar" ]; then
      export RAPID_ENV_HOME="${WD}"
    elif [ -f "${WD}/renv" -a -f "${WD}/../lib/rapidenv-1.3.2.jar" ]; then
      export RAPID_ENV_HOME=$(expr "${WD}" : '\(.*\)/[^/]*')
    fi
  fi
fi
cd "${ORIGINAL_WD}"

if [ ! -f "${RAPID_ENV_HOME}/bin/renv" -o ! -f "${RAPID_ENV_HOME}/lib/rapidenv-1.3.2.jar" ]; then
  echo "ERROR: could not determine RAPID_ENV_HOME correctly"
  echo "  RAPID_ENV_HOME = \"$RAPID_ENV_HOME\""
  echo "  Please set RAPID_ENV_HOME in your environment before sourcing renv."
  export RAPID_ENV_SCRIPT_RETURN_CODE=1
fi

if [ ${RAPID_ENV_SCRIPT_RETURN_CODE} -lt 0 ]; then

  case "$(uname)" in
  CYGWIN*)
    export RAPID_ENV_HOME_FOR_CLASSPATH="$(echo ${RAPID_ENV_HOME}/lib | sed 's/\/cygdrive\/c/C:/;s/\/cygdrive\/d/D:/;s/\/cygdrive\/e/E:/;s/\/cygdrive\/f/F:/')"
    ;;
  *)
    export RAPID_ENV_HOME_FOR_CLASSPATH="${RAPID_ENV_HOME}/lib"
    ;;
  esac
  cd "${RAPID_ENV_HOME}"

  # RAPID_ENV_PROFILES_HOME is the path where the user / machine environment profiles are located
  # usually this equals RAPID_ENV_HOME.
  # Change here if you want to have different behaviour
  export RAPID_ENV_PROFILES_HOME="${RAPID_ENV_HOME}/profile"
  if [ ! -e "${RAPID_ENV_PROFILES_HOME}" ]; then
    mkdir "${RAPID_ENV_PROFILES_HOME}"
  fi

  # RAPID_ENV_PROFILE is the common file name part for both profiles:
  # the properties and the environment variable set up shell script
  export RAPID_ENV_PROFILE="${RAPID_ENV_PROFILES_HOME}/renv_$(whoami)_$(hostname)"

  # find Java to execute renv
  export JAVA="java"

  case "$(uname)" in
  CYGWIN*)
    export PROGRAMFILES="$(echo ${PROGRAMFILES} | sed 's/\\/\//;s/C:/\/cygdrive\/c/;s/D:/\/cygdrive\/d/;s/E:/\/cygdrive\/e/;s/F:/\/cygdrive\/f/')"
    if [ -e "${PROGRAMFILES}/Java/jre5/bin/java.exe" ]; then
      export JAVA="${PROGRAMFILES}/Java/jre5/bin/java.exe"
    elif [ -e "${PROGRAMFILES}/Java/jre6/bin/java.exe" ]; then
      export JAVA="${PROGRAMFILES}/Java/jre6/bin/java.exe"
    fi
    ;;
  *)
    if [ -e "/usr/bin/java" ]; then
      export JAVA="/usr/bin/java"
    elif [ -e "/usr/share/java/bin/java" ]; then
      export JAVA="/usr/share/java/bin/java"
    elif [ -e "/etc/java" ]; then
      export JAVA="/etc/java"
    fi
    ;;
  esac

  if [ "${JAVA}" = "java" ]; then
    echo "WARNING no standard JRE installation found"
  fi
  if [ "$1" = "-v" -o "$1" = "-verbose" ]; then
    echo "using JRE \"${JAVA}\""
  fi

  # RAPID_ENV_COMMAND is the JVM call to execute the "renv" command
  case "$(uname)" in
  CYGWIN*)
    PATH_SEPARATOR=";"
    ;;
  *)
    PATH_SEPARATOR=":"
    ;;
  esac

  export RAPID_ENV_COMMAND="\"${JAVA}\" -classpath \"${RAPID_ENV_HOME_FOR_CLASSPATH}/rapidenv-1.3.2.jar"
  export RAPID_ENV_COMMAND="${RAPID_ENV_COMMAND}${PATH_SEPARATOR}${RAPID_ENV_HOME_FOR_CLASSPATH}/rapidbeans-framework-0.9.5.jar"
  export RAPID_ENV_COMMAND="${RAPID_ENV_COMMAND}${PATH_SEPARATOR}${RAPID_ENV_HOME_FOR_CLASSPATH}/ant-1.8.2.jar"
  export RAPID_ENV_COMMAND="${RAPID_ENV_COMMAND}\" org.rapidbeans.rapidenv.cmd.CmdRenv"

  # if there is not already an RapidEnv profile for this user and this host do the set up
  if [ ! -r "${RAPID_ENV_PROFILE}.sh" ]; then
    setupenv
  fi
fi

if [ ${RAPID_ENV_SCRIPT_RETURN_CODE} -lt 0 ]; then
  if [ ! -r "${RAPID_ENV_PROFILE}.sh" ]; then
    echo "ERROR: RapidEnv boot error, ${RAPID_ENV_PROFILE}.sh not created."
    RAPID_ENV_SCRIPT_RETURN_CODE=1
  fi

  if [ ${RAPID_ENV_SCRIPT_RETURN_CODE} -lt 0 ]; then

    # source the RapidEnv profile
    . "${RAPID_ENV_PROFILE}.sh"

    # start the RapidEnv interpreter with the given options and command
    eval "${RAPID_ENV_COMMAND}" $*
    RAPID_ENV_JAVA_RETURN_CODE="$?"
    case "$(uname)" in
    CYGWIN*)
      if [ "${RAPID_ENV_JAVA_RETURN_CODE}" = "9009" ]; then
        echo "ERROR ${RAPID_ENV_JAVA_RETURN_CODE} during execution of RapidEnv: probably \"java\" is not the command path"
        RAPID_ENV_SCRIPT_RETURN_CODE=2
      fi
      ;;
    *)
      ;;
    esac

    if [ "${RAPID_ENV_JAVA_RETURN_CODE}" != "0" ]; then
      echo "ERROR ${RAPID_ENV_JAVA_RETURN_CODE} during execution of RapidEnv"
      RAPID_ENV_SCRIPT_RETURN_CODE=3
    fi
  fi
fi

# source the RapidEnv profile again in case it has changed
if [ ${RAPID_ENV_SCRIPT_RETURN_CODE} -lt 0 -a -r "${RAPID_ENV_PROFILE}.sh" ]; then
  . "${RAPID_ENV_PROFILE}.sh"
fi

cd ${ORIGINAL_WD}
if [ "${SOURCING}" = "false" ]; then
  if [ ${RAPID_ENV_SCRIPT_RETURN_CODE} -gt 0 ]; then
    exit ${RAPID_ENV_SCRIPT_RETURN_CODE}
  else
    echo "WARNING: environment not updated"
    echo "  call \". renv\" in order to update your environment"
  fi
fi

# check if WD contains RAPID_ENV_PROJECT_HOME
if [ "${RAPID_ENV_PROJECT_HOME}" != "" ]; then
  expr "$(pwd)" : "^${RAPID_ENV_PROJECT_HOME}" >/dev/null
  if [ $? != 0 ]; then
    echo "WARNING: current working directory \"$(pwd)\""
    echo "  is not under project root \"${RAPID_ENV_PROJECT_HOME}\""
  fi
fi
